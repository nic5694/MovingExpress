@startuml
title Request Quote Class Diagram within the Shipment Subdomain

package "shipmentsubdomain" {

    package "businesslayer" {
        interface QuoteService {
            + createQuote(quoteRequest: QuoteRequest) : QuoteResponse
            + cancelQuote(quoteId: String) : boolean
            + updateQuoteStatus(quoteId: String, status: String) : boolean
            + updateQuote(quoteRequest: QuoteRequest) : QuoteResponse
            + deleteQuote(quoteId: String) : boolean
        }

        class QuoteServiceImpl {
            - quoteRepository : QuoteRepository
            - quoteRequestMapper : QuoteRequestMapper
            - quoteResponseMapper : QuoteResponseMapper
            + createQuote(quoteRequest: QuoteRequest) : QuoteResponse
            + cancelQuote(quoteId: String) : boolean
            + updateQuoteStatus(quoteId: String, status: String) : boolean
            + updateQuote(quoteRequest: QuoteRequest) : QuoteResponse
            + deleteQuote(quoteId: String) : boolean
        }
    }

    package "datalayer" {
        class ContactDetails {
            - name : String
            - email : String
            - phoneNumber : String
            - preferredContactMethod : ContactMethod
        }

        enum ContactMethod {
            EMAIL
            PHONE
        }

        enum Country {
            USA
            CANADA
        }

        class Address {
            - line1 : String
            - line2 : String
            - city : String
            - postalCode : String
            - country : Country
        }

        class PickupAddress extends Address {
        }

        class DestinationAddress extends Address {
        }

        class Quote {
            - id : int
            - contactDetails : ContactDetails
            - pickupAddress : PickupAddress
            - destinationAddress : DestinationAddress
            - quoteIdentifier : QuoteIdentifier
            - status : String
        }

        class QuoteIdentifier {
            - quoteId : String
        }

        interface QuoteRepository {
            + save(quote: Quote) : Quote
            + delete(quoteId: String) : boolean
            + update(quote: Quote) : Quote
            + findById(quoteId: String) : Quote
        }
    }

    package "datamapperlayer" {
        interface QuoteRequestMapper {
            + toQuote(quoteRequest: QuoteRequest) : Quote
        }

        interface QuoteResponseMapper {
            + toQuoteResponse(quote: Quote) : QuoteResponse
        }
    }

    package "presentationlayer" {
        class QuoteRequest {
            - pickupStreetAddress : String
            - pickupCity : String
            - pickupProvince : String
            - pickupCountry : Country
            - pickupPostalCode : String
            - pickupRoomNumber : int
            - pickupElevator : boolean
            - pickupBuildingType : String
            - destinationStreetAddress : String
            - destinationCity : String
            - destinationProvince : String
            - destinationCountry : Country
            - destinationPostalCode : String
            - destinationRoomNumber : int
            - destinationElevator : boolean
            - destinationBuildingType : String
            - firstName : String
            - lastName : String
            - emailAddress : String
            - phoneNumber : String
            - contactMethod : ContactMethod
            - expectedMovingDate : String
            - comment : String
        }

        class QuoteResponse {
            - quoteId : String
            - estimatedPrice : double
            - estimatedTime : String
            - status : String
        }

        class ShipmentController {
            - quoteService : QuoteService
            + requestQuote(quoteRequest: QuoteRequest) : QuoteResponse
            + cancelQuote(quoteId: String) : boolean
            + updateQuote(quoteRequest: QuoteRequest) : QuoteResponse
        }
    }

    QuoteServiceImpl -down-|> QuoteService : implements
    QuoteServiceImpl -down-> QuoteRepository : uses
    QuoteServiceImpl -down-> QuoteRequestMapper : uses
    QuoteServiceImpl -down-> QuoteResponseMapper : uses
    QuoteRequestMapper -left- Quote : data conversion
    QuoteResponseMapper -right- Quote : data conversion
    QuoteRepository -[hidden]-> Quote : data persistence
    Quote -up-^ ContactDetails : has
    Quote -up-^ PickupAddress : has
    Quote -up-^ DestinationAddress : has
    Quote -up-^ QuoteIdentifier : has
    ContactDetails -right-> ContactMethod : uses
    Address -up-^ Country : uses
    ShipmentController -right-> QuoteService : uses
    ShipmentController -down-> QuoteRequest : uses
    ShipmentController -down-> QuoteResponse : uses
}

@enduml
