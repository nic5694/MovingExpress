@startuml
title Client Actions in Request Quote Sequence Diagram

actor Client

participant ReactApplication as "<<View>>\nReactApplication"
participant LandingPage as "<<View>>\nLandingPage"
participant ShipmentQuotePage as "<<View>>\nShipmentQuotePage"
participant UserHomePage as "<<View>>\nUserHomePage"
participant QuoteController as "<<Controller>>\nQuoteController"
participant QuoteService as "<<Service>>\nQuoteService"
participant QuoteRepository as "<<Repository>>\nQuoteRepository"
participant Database as "<<Database>>\nDatabase"

Client -> ReactApplication : Access website
activate ReactApplication

ReactApplication -> LandingPage : render()
activate LandingPage

alt Client is logged in
    LandingPage -> UserHomePage : Navigate to profile after login
    deactivate LandingPage
    activate UserHomePage

    UserHomePage -> ShipmentQuotePage : Select 'Request Quote'
    deactivate UserHomePage
else
    LandingPage -> ShipmentQuotePage : Select 'Shipment Quote'
    deactivate LandingPage
end
activate ShipmentQuotePage

ShipmentQuotePage --> Client : Display quote form
Client -> ShipmentQuotePage : Fill up quote details Form
activate ShipmentQuotePage

ShipmentQuotePage -> QuoteController : POST /quote
activate QuoteController

QuoteController -> QuoteService : createQuote()
activate QuoteService

QuoteService -> QuoteRepository : save(quoteData)
activate QuoteRepository

QuoteRepository -> Database : INSERT INTO quotes
activate Database
Database --> QuoteRepository : Success
deactivate Database

QuoteRepository --> QuoteService : Quote saved
deactivate QuoteRepository

QuoteService --> QuoteController : QuoteResponse
deactivate QuoteService

QuoteController --> ShipmentQuotePage : Show success message
deactivate QuoteController

ShipmentQuotePage --> Client : 'Quote Sent Successfully' message
deactivate ShipmentQuotePage

alt Client is logged in (Post-Quote Creation)
    UserHomePage -> QuoteController : View Quote Status
    activate QuoteController

    QuoteController -> QuoteService : retrieveQuoteStatus()
    activate QuoteService

    QuoteService -> QuoteRepository : SELECT quote
    activate QuoteRepository

    QuoteRepository -> Database : Query quote data
    activate Database
    Database --> QuoteRepository : Query Results
    deactivate Database

    QuoteRepository --> QuoteService : Quote Status
    deactivate QuoteRepository

    QuoteService --> QuoteController : QuoteStatusResponse
    deactivate QuoteService

    QuoteController --> UserHomePage : Display Quote Status
    deactivate QuoteController

    UserHomePage --> Client : Show Quote Status
    deactivate UserHomePage

    UserHomePage -> QuoteController : Edit Quote
    activate QuoteController

    QuoteController -> QuoteService : editQuote()
    activate QuoteService

    QuoteService -> QuoteRepository : UPDATE quote
    activate QuoteRepository

    QuoteRepository -> Database : Update quote data
    activate Database
    Database --> QuoteRepository : Update Results
    deactivate Database

    QuoteRepository --> QuoteService : Update Confirmation
    deactivate QuoteRepository

    QuoteService --> QuoteController : EditResponse
    deactivate QuoteService

    QuoteController --> UserHomePage : Edit Confirmation
    deactivate QuoteController

    UserHomePage --> Client : Show Edit Confirmation
    deactivate UserHomePage
end

@enduml
