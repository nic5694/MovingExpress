plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.26"
    h2Version = '1.4.200'
    lombokMapstructBindingVersion = "0.2.0"
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.h2database:h2:"
    implementation 'mysql:mysql-connector-java:8.0.23'
    implementation('com.okta.spring:okta-spring-boot-starter:3.0.5')
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    runtimeOnly "com.h2database:h2:"
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.bitbucket.b_c:jose4j:0.9.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation('com.h2database:h2')
    testImplementation 'org.yaml:snakeyaml:2.2'
}

jacoco {
    toolVersion = "0.8.8"
}
jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/petclinic/visits/visitsservicenew/VisitsServiceNewApplication.class"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification


test {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
